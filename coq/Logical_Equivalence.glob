DIGEST ad3f4b88d78a349c99e76cdecea4363b
FTop.Logical_Equivalence
R15:18 Top.Sets <> <> lib
R20:32 Top.Modal_Library <> <> lib
R34:48 Top.Modal_Notations <> <> lib
R50:58 Stdlib.Logic.Classical <> <> lib
R60:63 Stdlib.Lists.List <> <> lib
sec 75:85 <> Equivalence
var  98:98 Equivalence X
R101:115 Top.Modal_Library <> modal_index_set class
prf 126:142 <> singleton_formula
binder 154:154 <> M:3
binder 156:156 <> p:4
R189:192 Corelib.Init.Logic <> ::type_scope:x_'->'_x not
R161:172 Top.Modal_Library <> theory_modal def
R174:174 Top.Logical_Equivalence <> M:3 var
R177:185 Top.Sets <> Singleton ind
R187:187 Top.Logical_Equivalence <> p:4 var
R194:197 Top.Modal_Notations <> :::x_'|='_x not
R193:193 Top.Logical_Equivalence <> M:3 var
R198:198 Top.Logical_Equivalence <> p:4 var
prf 258:276 <> implies_to_or_modal
binder 288:289 <> φ:5
binder 291:292 <> ψ:6
R311:315 Top.Modal_Notations <> :::x_'=|='_x not
R297:299 Top.Modal_Notations <> :::'[!'_x_'!]' not
R308:310 Top.Modal_Notations <> :::'[!'_x_'!]' not
R302:305 Top.Modal_Notations <> :modal::x_'->'_x not
binder 300:301 <> φ:7
binder 300:301 <> φ:8
binder 306:307 <> ψ:9
binder 306:307 <> ψ:10
R316:318 Top.Modal_Notations <> :::'[!'_x_'!]' not
R328:330 Top.Modal_Notations <> :::'[!'_x_'!]' not
R322:325 Top.Modal_Notations <> :modal::x_'\/'_x not
R319:319 Top.Modal_Notations <> :modal::'~'_x not
binder 320:321 <> φ:11
binder 320:321 <> φ:12
binder 326:327 <> ψ:13
binder 326:327 <> ψ:14
R360:372 Top.Modal_Library <> entails_modal def
R375:381 Top.Modal_Library <> entails def
R384:397 Top.Modal_Library <> validate_model def
R440:456 Top.Logical_Equivalence <> singleton_formula thm
R440:456 Top.Logical_Equivalence <> singleton_formula thm
R492:494 Top.Modal_Notations <> :::x_''''_x_'||-'_x not
R496:500 Top.Modal_Notations <> :::x_''''_x_'||-'_x not
R477:483 Stdlib.Logic.Classical_Prop <> classic prfax
R492:494 Top.Modal_Notations <> :::x_''''_x_'||-'_x not
R496:500 Top.Modal_Notations <> :::x_''''_x_'||-'_x not
R477:483 Stdlib.Logic.Classical_Prop <> classic prfax
R529:541 Top.Modal_Library <> entails_modal def
R544:550 Top.Modal_Library <> entails def
R592:608 Top.Logical_Equivalence <> singleton_formula thm
R592:608 Top.Logical_Equivalence <> singleton_formula thm
prf 770:785 <> double_neg_modal
binder 797:798 <> φ:15
R813:817 Top.Modal_Notations <> :::x_'=|='_x not
R803:805 Top.Modal_Notations <> :::'[!'_x_'!]' not
R810:812 Top.Modal_Notations <> :::'[!'_x_'!]' not
R806:806 Top.Modal_Notations <> :modal::'~'_x not
R807:807 Top.Modal_Notations <> :modal::'~'_x not
binder 808:809 <> φ:16
binder 808:809 <> φ:17
R818:819 Top.Logical_Equivalence <> φ:15 var
R849:861 Top.Modal_Library <> entails_modal def
R864:870 Top.Modal_Library <> entails def
R873:886 Top.Modal_Library <> validate_model def
R907:923 Top.Logical_Equivalence <> singleton_formula thm
R907:923 Top.Logical_Equivalence <> singleton_formula thm
R975:978 Stdlib.Logic.Classical_Prop <> NNPP thm
R975:978 Stdlib.Logic.Classical_Prop <> NNPP thm
R998:1010 Top.Modal_Library <> entails_modal def
R1013:1019 Top.Modal_Library <> entails def
R1022:1035 Top.Modal_Library <> validate_model def
R1067:1083 Top.Logical_Equivalence <> singleton_formula thm
R1067:1083 Top.Logical_Equivalence <> singleton_formula thm
R1105:1111 Stdlib.Logic.Classical_Prop <> classic prfax
R1142:1145 Stdlib.Logic.Classical_Prop <> NNPP thm
R1142:1145 Stdlib.Logic.Classical_Prop <> NNPP thm
prf 1190:1209 <> and_to_implies_modal
binder 1221:1222 <> φ:18
binder 1224:1225 <> ψ:19
R1244:1248 Top.Modal_Notations <> :::x_'=|='_x not
R1230:1232 Top.Modal_Notations <> :::'[!'_x_'!]' not
R1241:1243 Top.Modal_Notations <> :::'[!'_x_'!]' not
R1235:1238 Top.Modal_Notations <> :modal::x_'/\'_x not
binder 1233:1234 <> φ:20
binder 1233:1234 <> φ:21
binder 1239:1240 <> ψ:22
binder 1239:1240 <> ψ:23
R1249:1251 Top.Modal_Notations <> :::'[!'_x_'!]' not
R1264:1266 Top.Modal_Notations <> :::'[!'_x_'!]' not
R1252:1252 Top.Modal_Notations <> :modal::'~'_x not
R1253:1253 Top.Modal_Notations <> :modal::'('_x_')' not
R1263:1263 Top.Modal_Notations <> :modal::'('_x_')' not
R1256:1259 Top.Modal_Notations <> :modal::x_'->'_x not
binder 1254:1255 <> φ:24
binder 1254:1255 <> φ:25
R1260:1260 Top.Modal_Notations <> :modal::'~'_x not
binder 1261:1262 <> ψ:26
binder 1261:1262 <> ψ:27
R1296:1308 Top.Modal_Library <> entails_modal def
R1311:1317 Top.Modal_Library <> entails def
R1320:1333 Top.Modal_Library <> validate_model def
R1371:1384 Top.Modal_Library <> validate_model def
R1418:1434 Top.Logical_Equivalence <> singleton_formula thm
R1418:1434 Top.Logical_Equivalence <> singleton_formula thm
R1453:1455 Corelib.Init.Logic <> not def
R1559:1571 Top.Modal_Library <> entails_modal def
R1574:1580 Top.Modal_Library <> entails def
R1618:1631 Top.Modal_Library <> validate_model def
R1673:1689 Top.Logical_Equivalence <> singleton_formula thm
R1673:1689 Top.Logical_Equivalence <> singleton_formula thm
R1758:1764 Stdlib.Logic.Classical_Prop <> classic prfax
R1838:1844 Stdlib.Logic.Classical_Prop <> classic prfax
prf 1899:1918 <> diamond_to_box_modal
binder 1930:1931 <> φ:28
binder 1933:1935 <> idx:29
R1953:1957 Top.Modal_Notations <> :::x_'=|='_x not
R1940:1942 Top.Modal_Notations <> :::'[!'_x_'!]' not
R1950:1952 Top.Modal_Notations <> :::'[!'_x_'!]' not
R1943:1943 Top.Modal_Notations <> :modal::'<'_x_'>'_x not
R1947:1947 Top.Modal_Notations <> :modal::'<'_x_'>'_x not
binder 1944:1946 <> idx:30
binder 1944:1946 <> idx:31
binder 1948:1949 <> φ:32
binder 1948:1949 <> φ:33
R1958:1960 Top.Modal_Notations <> :::'[!'_x_'!]' not
R1970:1972 Top.Modal_Notations <> :::'[!'_x_'!]' not
R1961:1961 Top.Modal_Notations <> :modal::'~'_x not
R1962:1962 Top.Modal_Notations <> :modal::'['_x_']'_x not
R1966:1966 Top.Modal_Notations <> :modal::'['_x_']'_x not
binder 1963:1965 <> idx:34
binder 1963:1965 <> idx:35
R1967:1967 Top.Modal_Notations <> :modal::'~'_x not
binder 1968:1969 <> φ:36
binder 1968:1969 <> φ:37
R2002:2014 Top.Modal_Library <> entails_modal def
R2017:2023 Top.Modal_Library <> entails def
R2026:2039 Top.Modal_Library <> validate_model def
R2081:2097 Top.Logical_Equivalence <> singleton_formula thm
R2081:2097 Top.Logical_Equivalence <> singleton_formula thm
R2153:2159 Stdlib.Logic.Classical_Prop <> classic prfax
R2219:2231 Top.Modal_Library <> entails_modal def
R2234:2240 Top.Modal_Library <> entails def
R2275:2288 Top.Modal_Library <> validate_model def
R2323:2325 Corelib.Init.Logic <> not def
R2355:2371 Top.Logical_Equivalence <> singleton_formula thm
R2355:2371 Top.Logical_Equivalence <> singleton_formula thm
R2427:2433 Stdlib.Logic.Classical_Prop <> classic prfax
R2494:2504 Top.Logical_Equivalence Equivalence <> sec
